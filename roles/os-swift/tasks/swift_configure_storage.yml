---
# Copyright (c) 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

  - name: Format account devices as XFS
    filesystem: dev={{swift_storage_device_path}}{{item}} force=no fstype=xfs
    with_items: "{{ swift_storage_devices }}"
    when: swift_storage_devices is defined

  - name: Format account devices as XFS
    filesystem: dev={{swift_storage_device_path}}{{item}} force=no fstype=xfs
    with_items: "{{ hostvars[inventory_hostname]['devices'] }}"
    when: swift_storage_devices is undefined

  - name: Create /etc/fstab if it does not exist
    file: path=/etc/fstab state=touch mode=640

  - name: Mount storage device
    mount: fstype=xfs name=/srv/node/{{item}} state=mounted src={{swift_storage_device_path}}{{item}} opts="noatime,nodiratime,nobarrier,logbufs=8" dump=0 passno=2
    with_items: "{{ swift_storage_devices }}"
    when: swift_storage_devices is defined

  - name: Mount storage device
    mount: fstype=xfs name=/srv/node/{{item}} state=mounted src={{swift_storage_device_path}}{{item}} opts="noatime,nodiratime,nobarrier,logbufs=8" dump=0 passno=2
    with_items: "{{ hostvars[inventory_hostname]['devices'] }}"
    when: swift_storage_devices is undefined

  - name: Ensure proper ownership of the mount point structure
    file: owner=swift group=swift recurse=yes state=directory path=/srv/node/

  - name: Create the recon directory and ensure proper ownership of it
    file: path=/var/cache/swift state=directory owner=root group=swift recurse=yes mode=755

  - name: Create /etc/rsyncd.conf
    template: dest=/etc/rsyncd.conf src=rsyncd.conf.j2
    notify: restart rsyncd

  - name: create /etc/default if it does not exist
    file: path=/etc/default state=directory mode=640

  - name: create /etc/default/rsync if it does not exist
    file: path=/etc/default/rsync state=touch mode=640

  - name: Edit /etc/default/rsync
    lineinfile: dest=/etc/default/rsync line="RSYNC_ENABLE=true"

  - name: Create /etc/swift/account-server.conf
    template: dest=/etc/swift/account-server.conf src=account-server.conf.j2 owner=root group=swift mode=640
    notify: restart swift storage node services

  - name: Create /etc/swift/container-server.conf
    template: dest=/etc/swift/container-server.conf src=container-server.conf.j2 owner=root group=swift mode=640
    notify: restart swift storage node services

  - name: Create /etc/swift/object-server.conf
    template: dest=/etc/swift/object-server.conf src=object-server.conf.j2 owner=root group=swift mode=640
    notify: restart swift storage node services

  - name: Fetch ring files
    delegate_to: "{{ groups['openstack_object_storage_controller'][0] }}"
    fetch: src=/etc/swift/{{ item}} dest=/tmp/
    with_items: "{{ring_conf_files}}"

  - name: Distribute ring files to other storage nodes
    copy: src=/tmp/{{inventory_hostname}}/etc/swift/{{ item }} dest=/etc/swift/
    with_items: "{{ ring_conf_files }}"

  - name: Ensure proper ownership of /etc/swift
    file: owner=root group=swift recurse=yes state=directory path=/etc/swift

  - name: Change ownership of the certificate if SAIO(Swift All-in-one)
    delegate_to: "{{ groups['openstack_object_storage_controller'][0] }}"
    file: owner=swift group=swift path=/etc/swift/cacert.pem state=file
    when: "{{ groups['openstack_object_storage_controller'][0] == inventory_hostname}}"

  - meta: flush_handlers
