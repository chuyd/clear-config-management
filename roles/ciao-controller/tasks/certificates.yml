---
# Copyright (c) 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

  - name: Create certificate directory
    file: path=/etc/pki/ciao state=directory

  - name: Create Scheduler key and CA certificate
    command: >
      {{ environment_path }}/ciao-cert -server -role scheduler
      -email={{ ciao_admin_email }} -organization="{{ ciao_cert_organization }}"
      -ip={{ ciao_controller_ip }} -host={{ ciao_controller_fqdn }} -verify
    args:
      chdir: /etc/pki/ciao
      creates: /etc/pki/ciao/CAcert-{{ ciao_controller_fqdn }}.pem

  - name: Create agent keys
    command: >
      {{ environment_path }}/ciao-cert -role {{ item.role }} --server-cert
      cert-Scheduler-{{ ciao_controller_fqdn }}.pem -email={{ ciao_admin_email }}
      --organization="{{ ciao_cert_organization }}" -host=localhost -verify
    args:
      chdir: /etc/pki/ciao
      creates: "{{ item.creates }}"
    with_items:
      - role: agent
        creates: /etc/pki/ciao/cert-CNAgent-localhost.pem
      - role: netagent
        creates: /etc/pki/ciao/cert-NetworkingAgent-localhost.pem
      - role: cnciagent
        creates: /etc/pki/ciao/cert-CNCIAgent-localhost.pem
      - role: controller
        creates: /etc/pki/ciao/cert-Controller-localhost.pem

  - name: Retrieve CA certificate
    delegate_to: "{{ keystone_fqdn }}"
    synchronize: "src=/etc/keystone/ssl/cacert.pem dest={{ ca_cert_file }}"

  - name: Enable CA certificate (Ubuntu)
    command: update-ca-certificates
    args:
      creates: /etc/ssl/certs/cacert.pem
    when: ansible_distribution == 'Ubuntu'
